<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LoanCalcDBDataSet" targetNamespace="http://tempuri.org/LoanCalcDBDataSet.xsd" xmlns:mstns="http://tempuri.org/LoanCalcDBDataSet.xsd" xmlns="http://tempuri.org/LoanCalcDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="LoanCalcDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LoanCalcDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LoanCalc_GUI.Properties.Settings.GlobalReference.Default.LoanCalcDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UniInfoTableAdapter" GeneratorDataComponentClassName="UniInfoTableAdapter" Name="UniInfo" UserDataComponentName="UniInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LoanCalcDBConnectionString (Settings)" DbObjectName="dbo.UniInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UniInfo] WHERE (([UniversityName] = @Original_UniversityName) AND ([CreditHours] = @Original_CreditHours) AND ([CostPerCH] = @Original_CostPerCH))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UniversityName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UniversityName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_CostPerCH" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="CostPerCH" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UniInfo] ([UniversityName], [CreditHours], [CostPerCH]) VALUES (@UniversityName, @CreditHours, @CostPerCH);
SELECT UniversityName, CreditHours, CostPerCH FROM UniInfo WHERE (UniversityName = @UniversityName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UniversityName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UniversityName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@CostPerCH" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="CostPerCH" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UniversityName, CreditHours, CostPerCH FROM dbo.UniInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UniInfo] SET [UniversityName] = @UniversityName, [CreditHours] = @CreditHours, [CostPerCH] = @CostPerCH WHERE (([UniversityName] = @Original_UniversityName) AND ([CreditHours] = @Original_CreditHours) AND ([CostPerCH] = @Original_CostPerCH));
SELECT UniversityName, CreditHours, CostPerCH FROM UniInfo WHERE (UniversityName = @UniversityName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UniversityName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UniversityName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@CostPerCH" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="CostPerCH" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UniversityName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UniversityName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_CostPerCH" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="CostPerCH" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UniversityName" DataSetColumn="UniversityName" />
              <Mapping SourceColumn="CreditHours" DataSetColumn="CreditHours" />
              <Mapping SourceColumn="CostPerCH" DataSetColumn="CostPerCH" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LoanCalcDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="LoanCalcDBDataSet" msprop:Generator_UserDSName="LoanCalcDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="UniInfo" msprop:Generator_TableClassName="UniInfoDataTable" msprop:Generator_TableVarName="tableUniInfo" msprop:Generator_TablePropName="UniInfo" msprop:Generator_RowDeletingName="UniInfoRowDeleting" msprop:Generator_RowChangingName="UniInfoRowChanging" msprop:Generator_RowEvHandlerName="UniInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="UniInfoRowDeleted" msprop:Generator_UserTableName="UniInfo" msprop:Generator_RowChangedName="UniInfoRowChanged" msprop:Generator_RowEvArgName="UniInfoRowChangeEvent" msprop:Generator_RowClassName="UniInfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UniversityName" msprop:Generator_ColumnVarNameInTable="columnUniversityName" msprop:Generator_ColumnPropNameInRow="UniversityName" msprop:Generator_ColumnPropNameInTable="UniversityNameColumn" msprop:Generator_UserColumnName="UniversityName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreditHours" msprop:Generator_ColumnVarNameInTable="columnCreditHours" msprop:Generator_ColumnPropNameInRow="CreditHours" msprop:Generator_ColumnPropNameInTable="CreditHoursColumn" msprop:Generator_UserColumnName="CreditHours" type="xs:int" />
              <xs:element name="CostPerCH" msprop:Generator_ColumnVarNameInTable="columnCostPerCH" msprop:Generator_ColumnPropNameInRow="CostPerCH" msprop:Generator_ColumnPropNameInTable="CostPerCHColumn" msprop:Generator_UserColumnName="CostPerCH" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UniInfo" />
      <xs:field xpath="mstns:UniversityName" />
    </xs:unique>
  </xs:element>
</xs:schema>